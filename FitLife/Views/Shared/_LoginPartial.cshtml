@using Microsoft.AspNetCore.Identity
@inject SignInManager<Participant> SignInManager
@inject IParticipantService participantService
@inject ITrainerService trainerService

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
				@if (await participantService.ParticipantFirstName(User.Id()) is var firstName && firstName != null)
				{
					<a class="nav-link text-dark">Hello, @firstName!</a>
				}
				else
				{
					<a class="nav-link text-dark">Hello, @User.Identity.Name!</a>
				}
			</li>
		
		
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>

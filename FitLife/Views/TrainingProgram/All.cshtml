@model AllTrainingProgramsQueryModel
@inject ITrainerService trainerService
<link rel="stylesheet" href="~/css/TrainingProgramAll.css" />

@{
    ViewBag.Title = "All Training Programs";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />



@if (!Model.TrainingPrograms.Any())
{
    <h2 class="text-center">No training programs found by the given criteria!</h2>
}


@if (await trainerService.ExistsByIdAsync(User.Id()))
{
    <div class="row">
        <div>
            <a class="btn custom-add-train-button"
               asp-controller="TrainingProgram"
               asp-action="Add">Add Training Program</a>
        </div>
    </div>
    <br />

}


<div class="row">
    @foreach (var trainingProgram in Model.TrainingPrograms)
    {
        <partial name="_TrainingProgramPartial" model="@trainingProgram" />
    }
</div>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalTrainingProgramsCount /
        Model.TrainingProgramsPerPage);
}

<div class="btn-group" role="group" aria-label="Basic example">

    <a class="btn custom-add-train-button   @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
   asp-controller="TrainingProgram"
   asp-action="All"
   asp-route-currentPage="@previousPage"><<</a>


@{
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
    !Model.TrainingPrograms.Any();
}

    <a class="btn custom-add-train-button">@(Model.CurrentPage)</a>

    <a class="btn custom-add-train-button
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
       asp-controller="TrainingProgram"
   asp-action="All"
   asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
    </>
</div>